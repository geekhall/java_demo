<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 绑定一个对应的Dao/Mapper接口-->
<mapper namespace="cn.geekhall.dao.UserMapper">

    <!--    当java类的字段与数据库中不一致时，可以使用resultMap来进行映射，-->
    <resultMap id="UserMap" type="User">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="pwd" property="password"/>
    </resultMap>

    <select id="getUserList" resultType="user">
        select * from mybatis.user
    </select>

    <select id="getUserLike" resultType="user">
        select * from mybatis.user where name like #{value}
    </select>

    <!--    当java类的字段与数据库中不一致时，可以使用resultMap来进行映射，-->
    <select id="getUserById" resultMap="UserMap">
        select * from mybatis.user where id = #{id}
    </select>

    <insert id="addUser" parameterType="cn.geekhall.pojo.User">
        insert into mybatis.user (id, name, pwd) values (#{id},#{name},#{pwd})
    </insert>

    <insert id="addUser2" parameterType="map">
        insert into mybatis.user (id, name, pwd) values (#{user_id},#{user_name},#{pwd})
    </insert>

    <update id="updateUser" parameterType="cn.geekhall.pojo.User">
        update mybatis.user set name=#{name}, pwd=#{pwd} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from mybatis.user where id = #{id}
    </delete>
</mapper>