<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       https://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       https://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/cache
       https://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- 1. 扫描Service下面的包 -->
    <context:component-scan base-package="cn.geekhall.service"/>


    <!-- 2. 将我们所有的业务类，注入到Spring，可以通过配置或者注解的方式实现。 -->
    <bean id="BookServiceImpl"  class="cn.geekhall.service.BookServiceImpl">
        <!--
            这里的 bookMapper 的使用前提是spring-service.xml与spring-dao.xml 和 applicationContext.xml 需要在同一个工程的上下文中，
            或者使用：
                <import resource="classpath:spring-dao.xml" />
                <import resource="classpath:spring-service.xml" />
            来导入才可以。

            或者也可以使用注解 @Service 和 @Autowired 来注入。
         -->
        <property name="bookMapper" ref="bookMapper"/>
    </bean>

    <!-- 3. 声明式事务配置。 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- 4. AOP事务支持。 -->
    <!-- 事务的织入 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 给哪些方法配置事务 -->
        <!-- 配置事务的传播特性： new propagation -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务切入 -->
    <aop:config>
        <aop:pointcut id="txPointCut" expression="execution(* cn.geekhall.dao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>
</beans>