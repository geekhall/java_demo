<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    https://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    https://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 自动装配需要这一行，否则注解@Autowired会报空指针异常。-->
    <context:annotation-config/>

    <bean id="userService" class="cn.geekhall.service.UserServiceImpl"/>
    <bean id="log" class="cn.geekhall.log.Log"/>
    <bean id="afterLog" class="cn.geekhall.log.AfterLog"/>

    <!--    方式二： 使用自定义类-->
    <bean id="diy" class="cn.geekhall.diy.DiyPointCut"/>
    <aop:config>
<!--        自定义切面 ， ref： 要引用的类 -->
        <aop:aspect ref="diy">
<!--
            切入点
            第一个*号： 表示返回类型， *号表示所有的类型。
            包名：表示需要拦截的包名，后面的两个据点表示当前包的所有子包，子孙包下所有类的方法。
            第二个*号：表示类名：*号表示所有的类
            *.(..): 表示方法名，*号表示所有的方法，后面括号里面表示方法的参数，两个点表示任何参数。
-->
            <aop:pointcut id="point" expression="execution(* cn.geekhall.service.UserServiceImpl.*(..))"/>
<!--            通知-->
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>

        </aop:aspect>
    </aop:config>
</beans>